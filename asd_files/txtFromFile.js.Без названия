const loadedScripts=new Set();const loadScriptsDynamically=(scripts)=>{if(!scripts||scripts.length===0)return;scripts.forEach(scriptInfo=>{if(loadedScripts.has(scriptInfo.src))return;const script=document.createElement('script');script.src=scriptInfo.src;script.async=true;if(scriptInfo.id){script.id=scriptInfo.id;}
if(scriptInfo.type){script.type=scriptInfo.type;}
if(scriptInfo.attributes){Object.keys(scriptInfo.attributes).forEach(attr=>{script.setAttribute(attr,scriptInfo.attributes[attr]);});}
script.onload=()=>{loadedScripts.add(scriptInfo.src);console.log(`Script loaded: ${scriptInfo.src}`);};script.onerror=()=>{console.error(`Failed to load script: ${scriptInfo.src}`);};document.head.appendChild(script);});};const getTextFromFile=(file)=>{return new Promise((resolve,reject)=>{if(file.type==='text/plain'||file.type===''){readTextFile(file).then(resolve).catch(reject);}else if(file.type==='application/pdf'){readPdfFile(file).then(resolve).catch(reject);}else if(file.type==='application/vnd.openxmlformats-officedocument.wordprocessingml.document'){readDocumentFile(file).then(resolve).catch(reject);}else if(file.type==="application/msword"){var formData=new FormData();formData.append("myFile",file);formData.append("_token",$('meta[name="_token"]').attr("content"));formData.append("getFileContent",true);promiseReadFile(formData).then(resolve).catch(reject);}
else{reject(new Error('Unsupported file type'));}});}
const readFile=(file)=>{return new Promise((resolve,reject)=>{var fileName=file.name;var fileExtension=fileName.substr(fileName.lastIndexOf(".")+1);const allowedExtensions=["txt","pdf","docx","doc"];if(allowedExtensions.includes(fileExtension)){getTextFromFile(file).then((text)=>{resolve(text);}).catch((error)=>{console.error('Error reading file:',error);reject(error);});}else{alert("File Type Not Allowed");reject();}});};const promiseReadFile=(formdata)=>{return new Promise((resolve,reject)=>{$.ajaxSetup({headers:{'X-CSRF-TOKEN':$('meta[name="_token"]').attr('content')}});$.ajax({url:base_url+'getTxtFrmFile',type:'POST',data:formdata,contentType:false,processData:false,success:function(response){try{resolve(response);}catch(error){reject(error);}},error:function(xhr,textStatus,errorThrown){reject(textStatus);}});});};const readTextFile=(file)=>{return new Promise((resolve,reject)=>{var reader=new FileReader();reader.onload=function(event){const textContent=event.target.result;resolve(textContent);};reader.onerror=function(){reject(new Error('Error reading text file'));}
reader.readAsText(file);});}
const readPdfFile=(file)=>{return new Promise((resolve,reject)=>{var reader=new FileReader();reader.onload=function(event){var typedarray=new Uint8Array(event.target.result);pdfjsLib.getDocument(typedarray).promise.then(function(pdf){const pagesPromises=[];for(let i=1;i<=pdf.numPages;i++){pagesPromises.push(getPageText(i,pdf));}
Promise.all(pagesPromises).then(function(pagesText){resolve(pagesText.join("\n\n"));}).catch(reject);}).catch(reject);};reader.onerror=function(){reject(new Error('Error reading PDF file'));}
reader.readAsArrayBuffer(file);});}
const readDocumentFile=(file)=>{return new Promise((resolve,reject)=>{var reader=new FileReader();reader.onload=function(event){var arrayBuffer=event.target.result;mammoth.extractRawText({arrayBuffer:arrayBuffer}).then(function(result){var text=result.value;resolve(text);}).catch(function(err){reject(new Error('Error extracting text from DOCX file: '+err));});};reader.onerror=function(){reject(new Error('Error reading DOCX file'));}
reader.readAsArrayBuffer(file);});}
const getPageText=(pageNum,PDFDocumentInstance)=>{return PDFDocumentInstance.getPage(pageNum).then(function(pdfPage){return pdfPage.getTextContent().then(function(textContent){var textItems=textContent.items;var finalString="";for(var i=0;i<textItems.length;i++){var item=textItems[i];finalString+=item.str+" ";}
return finalString;});});}
const scriptsToLoad=[{src:"/web_assets/frontend/script/mammoth.browser.min.js",id:"mammoth"},{src:"/web_assets/frontend/script/pdf.min.js",id:"pdfjs"}];$(document).click(function(){loadScriptsDynamically(scriptsToLoad);});